name: "Deploy hosting infra"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "hosting-infra/**"
    branches:
      - main
      
env:
    TERRAFORM_VERSION: "1.6.6"

jobs:
  deploy-hosting-infra:
    name: "Deploy hosting infra"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    defaults:
      run:
        working-directory: "hosting-infra"
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS Credentials for Infra Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_CICD_ROLE}}
          aws-region: eu-west-2

      - name: Terraform Init
        id: init
        run: ls -latr; terraform init -input=false -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color
        continue-on-error: false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        id: apply
        run: terraform apply -input=false -no-color -auto-approve 

      - name: Connect to cluster
        if: github.ref == 'refs/heads/main'
        id: cluster-connect
        run: aws eks update-kubeconfig --region eu-west-2 --name webapp-eks-cluster

      - name: Create serviceaccount for load balancer
        if: github.ref == 'refs/heads/main'
        id: create-lb-sa
        run: |
          kubectl create serviceaccount aws-load-balancer-controller -n kube-system
          kubectl annotate serviceaccount aws-load-balancer-controller -n kube-system eks.amazonaws.com/role-arn=${{ secrets.LOADBALANCER_ROLE_ARN }}
        continue-on-error: true

      - name: Create serviceaccount for cert manager
        if: github.ref == 'refs/heads/main'
        id: create-cert-manager-sa
        run: |
          kubectl create namespace cert-manager
          kubectl create serviceaccount cert-manager -n cert-manager
          kubectl annotate serviceaccount cert-manager -n cert-manager eks.amazonaws.com/role-arn=${{ secrets.CERT_MANAGER_ROLE_ARN }}



