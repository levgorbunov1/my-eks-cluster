name: "2. Deploy Wordpress"

on:
  workflow_dispatch:

env:
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

jobs:
  deploy-wordpress:
    name: "Deploy Wordpress"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials for Infra Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_CICD_ROLE }}
          aws-region: eu-west-2

      - name: Connect to cluster
        id: cluster-connect
        run: aws eks update-kubeconfig --region eu-west-2 --name webapp-eks-cluster

      - name: Create serviceaccount for load balancer
        if: github.ref == 'refs/heads/main'
        id: create-lb-sa
        run: |
          kubectl create serviceaccount aws-load-balancer-controller -n kube-system
          kubectl annotate serviceaccount aws-load-balancer-controller -n kube-system eks.amazonaws.com/role-arn=${{ secrets.LOADBALANCER_ROLE_ARN }}
        continue-on-error: true

      - name: Deploy ingress controller
        id: deploy-ingress-controller
        run: |
          helm repo add eks https://aws.github.io/eks-charts
          helm repo update

          helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
            -n kube-system \
            --set clusterName=webapp-eks-cluster \
            --set serviceAccount.create=false \
            --set region=eu-west-2 \
            --set vpcId=$(aws ec2 describe-vpcs --filters "Name=cidr,Values=10.0.0.0/16" --query 'Vpcs[0].VpcId' --output text) \
            --set serviceAccount.name=aws-load-balancer-controller

      - name: Deploy Wordpress
        working-directory: "deployment-infra"
        id: deploy-wordpress
        run: |
          sleep 30
          kubectl apply -f namespace.yml -f service.yml -f ingress.yml -f 
          envsubst < deployment.yml | kubectl apply -f -
          sleep 20
          kubectl get ingress webapp-ingress -n my-webapp -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'




    

    