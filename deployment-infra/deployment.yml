---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
        - name: wordpress
          image: wordpress:php8.3-apache
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql-service:3306
            - name: WORDPRESS_DB_USER
              value: ${MYSQL_USER}
            - name: WORDPRESS_DB_PASSWORD
              value: ${MYSQL_PASSWORD}
            - name: WORDPRESS_DB_NAME
              value: ${MYSQL_DATABASE}
            - name: WORDPRESS_DEBUG
              value: "false"
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /healthcheck.php
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: wordpress-persistent-storage
              mountPath: /var/www/html
            - name: healthcheck-volume
              mountPath: /var/www/html/healthcheck.php
              subPath: healthcheck.php
      initContainers:
        - name: init-healthcheck
          image: busybox
          command: ['sh', '-c', "echo \"<?php header('Content-Type: text/plain'); echo 'OK'; ?>\" > /healthcheck/healthcheck.php"]
          volumeMounts:
          - name: healthcheck-volume
            mountPath: /healthcheck
      volumes:
        - name: wordpress-persistent-storage
          persistentVolumeClaim:
            claimName: wordpress-pvc
        - name: healthcheck-volume
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          args:
            - "--ignore-db-dir=lost+found"
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: ${MYSQL_ROOT_PASSWORD}
            - name: MYSQL_DATABASE
              value: ${MYSQL_DATABASE}
            - name: MYSQL_USER
              value: ${MYSQL_USER}
            - name: MYSQL_PASSWORD
              value: ${MYSQL_PASSWORD}
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-storage
provisioner: ebs.csi.aws.com
reclaimPolicy: Retain
parameters:
  type: gp2
  encrypted: "true"
  fsType: ext4
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-pvc
  namespace: wordpress
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ebs-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: wordpress
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ebs-storage

